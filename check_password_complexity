# a simple python script to check a NIST 800-53 standard around password complexity (just modified it for a 12 character length).
# password policy enforcement: is to ensure that passwords are strong, changed frequently, and never reused.
# this simple version will check password length, upper case and lower case variants to determine complexity.
# copy this code into a python file (e.g. password_check.py), goto where you saved it, run it with "python password_check.py" and voila it will ask you for a password to check
# version 2 will allow you to check the entire password list - you would need root access for /etc/shadow - but this will take me a while to figure out how :)
# v1.0 NP


def check_password_complexity(password):

# most people still try to stick with 8 - but I recommend 12 - longer the better
    minimum_length = 12

# set of if statements to check for falses

# length of 12
    if len(password) < minimum_length:
        print('Password too short')
        return False

# checks for upper case
    if not any(char.isupper() for char in password):
        print('Password has to have an uppercase letter')
        return False

# checks for lowercase
    if not any(char.islower() for char in password):
        print('Password has to have a lowercase letter')
        return False

# if it returns true, as in all these previous checks are OK - then your good to go
    print('Password meets NIST 800-53 complexity requirements.')
    return True
